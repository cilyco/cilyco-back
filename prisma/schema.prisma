// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Resident {
  id            Int     @default(autoincrement()) @id
  nom           String
  prenom        String
  commentaire   String?
  actif         Boolean?    @default(false)
  dateNaissance DateTime
  contacts      Contact[]
  visite        Visite?
  contrat       Contrat?
  accueil       Accueil?
  animations    Animation[]
  constantes    Constante[]
}

model Agent {
  id            Int     @default(autoincrement()) @id
  nom           String
  prenom        String
  commentaire   String?
  actif         Boolean?    @default(false)
  dateNaissance DateTime
  animations    Animation[]
}

model Contact {
  id            Int         @default(autoincrement()) @id
  nom           String
  prenom        String
  actif         Boolean?    @default(false)
  resident      Resident   @relation(fields: [residentId], references: [id])
  residentId    Int
}

model Constante {
  id            Int         @default(autoincrement()) @id
  temperature   Float
  tension       Float
  rythme        Int
  resident      Resident    @relation(fields: [residentId], references: [id])
  residentId    Int
}

model Visite {
  id            Int         @default(autoincrement()) @id
  createdAt     DateTime    @default(now())
  resident      Resident   @relation(fields: [residentId], references: [id])
  residentId    Int
}

model Contrat {
  id            Int         @default(autoincrement()) @id
  createdAt     DateTime    @default(now())
  resident      Resident   @relation(fields: [residentId], references: [id])
  residentId    Int
}

model Accueil {
  id            Int         @default(autoincrement()) @id
  createdAt     DateTime    @default(now())
  resident      Resident   @relation(fields: [residentId], references: [id])
  residentId    Int
}

model Vehicule {
  id                    Int         @default(autoincrement()) @id
  createdAt             DateTime    @default(now())
  marque                String
  modele                String
  kilometrage           Int
  etat                  String
  vehiculeEvenement     VehiculeEvenement[]
}

model VehiculeEvenement {
  id            Int         @default(autoincrement()) @id
  createdAt     DateTime    @default(now())
  vehicule      Vehicule    @relation(fields: [vehiculeId], references: [id])
  vehiculeId    Int
  debut         DateTime
  fin           DateTime
}

model Animation {
  id                            Int         @default(autoincrement()) @id
  createdAt                     DateTime    @default(now())
  lieu                          String
  debut                         DateTime
  fin                           DateTime
  residents                     Resident[]
  agents                        Agent[]
}

model Evenement {
  id            Int         @default(autoincrement()) @id
}